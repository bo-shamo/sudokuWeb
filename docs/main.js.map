{"version":3,"sources":["./src/app/sudoku.service.ts","./src/shared/checkValue.validator.ts","./src/environments/environment.ts","./src/app/landing/landing.component.ts","./src/app/landing/landing.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/cell.ts","./src/app/app-routing.module.ts","./src/app/sudoku/sudoku.component.ts","./src/app/sudoku/sudoku.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\nimport { Observable, of } from 'rxjs';\r\nimport { Cell } from './cell';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SudokuService {\r\n\r\n  constructor() { }\r\n\r\n  getCells(): Observable<Cell[][]> {\r\n    let rowGrid : number[][] = [];\r\n    let cellSectionGrid : Cell[][] = [[],[],[],[],[],[],[],[],[]];\r\n\r\n    //Sad generate a full 9*9 grid to prevent index out of bound errors\r\n    for (let rowIndex : number = 0; rowIndex < 9; rowIndex++){\r\n      let row : number[] = [];\r\n      for (let columnIndex : number = 0; columnIndex < 9; columnIndex++){\r\n        row.push(-1);\r\n      }\r\n      rowGrid.push(row);\r\n    }\r\n\r\n    rowGrid = fillGrid(0,0, rowGrid);\r\n\r\n    //Convert row grid => section grid\r\n    for (let rowIndex : number = 0; rowIndex < 9; rowIndex++){\r\n      for (let columnIndex : number = 0; columnIndex < 9; columnIndex++){\r\n        let sectionIndex = (((Math.floor(rowIndex / 3)) * 3)+Math.floor(columnIndex / 3));\r\n        cellSectionGrid[sectionIndex].push(new Cell(rowGrid[rowIndex][columnIndex]));\r\n      }\r\n    }\r\n\r\n    //Mask cells to create challenge\r\n    //Doing this as a separate loop to enable sixth section to have all the information available to flip and reverse\r\n    for (let sectionIndex : number = 0; sectionIndex < 9; sectionIndex++){\r\n      for (let cellIndex : number = 0; cellIndex < 9; cellIndex++){\r\n        cellSectionGrid[sectionIndex][cellIndex].isInitial = CheckIsInitial(sectionIndex, cellIndex, cellSectionGrid)\r\n      }\r\n    }\r\n\r\n    return of(cellSectionGrid);\r\n  }\r\n}\r\n\r\nfunction fillGrid(row : number, col : number, grid : number[][]) : number[][]{\r\n  \r\n  //Check if col is at the end of grid\r\n  if(col > 8){\r\n    row += 1;\r\n    col = 0;\r\n  }\r\n\r\n  //Check if at start of col\r\n  if(col < 0 && row > 0){\r\n    row -= 1;\r\n    col = 8;\r\n  }\r\n  \r\n  //Check if the grid is finished\r\n  if(row > 8){\r\n    return grid;\r\n  }\r\n\r\n  let unusedNumbers = findUsedNumbers(row, col, grid);\r\n  while (unusedNumbers.length > 0){\r\n    let selectedNumber = unusedNumbers[Math.floor(Math.random() * unusedNumbers.length)]\r\n    grid[row][col] = selectedNumber;\r\n    try{\r\n      fillGrid(row, col+1, grid);\r\n      return grid;\r\n    }\r\n    catch (error){\r\n      if (error.message === \"number not found\")\r\n      {\r\n        console.error(error);\r\n        grid[row][col] = -1;\r\n        unusedNumbers = unusedNumbers.filter(function(value){\r\n        return value != selectedNumber;\r\n        });\r\n      }\r\n      \r\n    }\r\n  }\r\n\r\n  throw new Error(\"number not found\");\r\n}\r\n\r\nfunction findUsedNumbers(rowIndex : number, columnIndex : number, rowGrid: number[][]) : number[] {\r\n  let validNumbers : number[] = [1,2,3,4,5,6,7,8,9];\r\n\r\n  //check section\r\n  validNumbers = removeUsedNumberSection(validNumbers, (rowIndex - (rowIndex % 3)), (columnIndex - (columnIndex % 3)), rowGrid);\r\n\r\n  //check row\r\n  validNumbers = removeUsedNumberRow(rowIndex, validNumbers, rowGrid);\r\n\r\n  //check column\r\n  validNumbers = removeUsedNumberColumn(columnIndex, validNumbers, rowGrid);\r\n\r\n  return validNumbers;\r\n}\r\n\r\nfunction removeUsedNumberSection(validNumbers : number[], rowStart : number, colStart : number, usedNumbers : number[][]) : number[] {\r\n  for(let row : number = 0; row < 3; row++){\r\n    for(let col : number = 0; col < 3; col++ ){\r\n      validNumbers = validNumbers.filter(validNum => validNum != usedNumbers[rowStart + row][colStart + col]);\r\n    }\r\n  }\r\n\r\n  return validNumbers;\r\n}\r\n\r\nfunction removeUsedNumberRow(row : number, validNumbers : number[], currentGrid : number[][]) : number[]{\r\n  for (let cellIndex = 0; cellIndex < 9; cellIndex++){\r\n    validNumbers = validNumbers.filter(validNum => validNum != currentGrid[row][cellIndex]);\r\n  }\r\n  return validNumbers;\r\n}\r\n\r\nfunction removeUsedNumberColumn(column : number, validNumbers : number[], currentGrid : number[][]) : number[]{\r\n  for (let cellIndex = 0; cellIndex < 9; cellIndex++){\r\n    validNumbers = validNumbers.filter(validNum => validNum != currentGrid[cellIndex][column]);\r\n  }\r\n  return validNumbers;\r\n}\r\n\r\nfunction CheckIsInitial(sectionIndex : number, cellIndex : number, CellGrid : Cell[][]) : boolean{\r\n  let isInitial : boolean = true;\r\n\r\n  //for the first 5 sections, math.random\r\n  if(sectionIndex < 5){\r\n    isInitial = Math.random() > 0.5;\r\n  }\r\n  //for the last 4 sections, missyeliot first four sections\r\n  else{\r\n    isInitial = CellGrid[8-sectionIndex][8-cellIndex].isInitial;\r\n  }\r\n\r\n  return isInitial;\r\n}","import { AbstractControl, ValidatorFn, ValidationErrors } from '@angular/forms';\r\nimport { Cell } from '../app/cell';\r\n\r\nexport function CheckValue(correctNumber : number) : ValidatorFn {\r\n    return (control: AbstractControl) : ValidationErrors | null => {\r\n        if (control.value != undefined)\r\n        {\r\n            if (control.value != correctNumber){\r\n                return { invalidGuess: true};\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-landing',\n  templateUrl: './landing.component.html',\n  styleUrls: ['./landing.component.less']\n})\nexport class LandingComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>landing works!</p>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.less']\n})\nexport class AppComponent {\n  title = 'SudokuWeb';\n}\n","\n<h1>{{title}}</h1>\n<nav>\n    <a routerLink=\"/landing\">Home</a>\n    <a routerLink='/sudoku'>Sudoku</a>\n</nav>\n\n<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { LandingComponent } from './landing/landing.component';\r\nimport { SudokuComponent } from './sudoku/sudoku.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LandingComponent,\r\n    SudokuComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    ReactiveFormsModule,\r\n    AppRoutingModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","export interface ICell {\r\n    displayNumber?: number;\r\n    correctNumber: number;\r\n    isInitial: boolean;\r\n}\r\n\r\nexport class Cell implements ICell{\r\n    _displayNumber? : number;\r\n    correctNumber : number;\r\n    isInitial : boolean;\r\n\r\n    get displayNumber() {\r\n        if (this.isInitial){\r\n            return this.correctNumber;\r\n        }\r\n        else{\r\n            return this._displayNumber;\r\n        }\r\n    }\r\n    set displayNumber(value){\r\n        this._displayNumber = value;\r\n    }\r\n\r\n    constructor(correctNumber : number){\r\n        this.correctNumber = correctNumber;\r\n        this.isInitial = true;\r\n    }\r\n}","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LandingComponent } from './landing/landing.component';\nimport { SudokuComponent } from './sudoku/sudoku.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo:'/landing', pathMatch:'full' },\n  { path: 'landing', component: LandingComponent },\n  { path: 'sudoku', component:SudokuComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, FormArray, Validators, FormBuilder } from '@angular/forms'\r\n\r\nimport { Cell } from '../cell';\r\nimport { SudokuService } from '../sudoku.service'; \r\nimport { CheckValue } from '../../shared/checkValue.validator';\r\n\r\n@Component({\r\n  selector: 'app-sudoku',\r\n  templateUrl: './sudoku.component.html',\r\n  styleUrls: ['./sudoku.component.less']\r\n})\r\nexport class SudokuComponent implements OnInit {\r\n\r\n  sudokuForm : FormGroup = new FormGroup({});\r\n\r\n  get sections(): FormArray {\r\n    return this.sudokuForm.get('sections') as FormArray;\r\n  }\r\n\r\n  constructor(private sudokuService: SudokuService, private formBuilder: FormBuilder) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getCells();\r\n  }\r\n\r\n  getCells(): void {\r\n    this.sudokuService.getCells()\r\n      .subscribe(grid => this.makeForm(grid));\r\n  }\r\n\r\n  makeForm(grid: Cell[][]) : void {\r\n    this.sudokuForm = this.formBuilder.group({\r\n      sections: this.makeGrid(grid)\r\n    });\r\n  }\r\n\r\n  makeGrid(grid: Cell[][]) : FormArray {\r\n    const sectionArray = grid.map(section => { return this.makeSectionGroup(section);});\r\n    return this.formBuilder.array(sectionArray);\r\n\r\n  }\r\n\r\n  makeSectionGroup(section: Cell[]) : FormGroup {\r\n    return this.formBuilder.group({\r\n      section: this.makeSection(section)\r\n    })\r\n  }\r\n\r\n  makeSection(section : Cell[]) : FormArray {\r\n    const cellArray = section.map(sudokuCell => { return this.formBuilder.group({\r\n        cell: [{value: sudokuCell.displayNumber, disabled: sudokuCell.isInitial }, [Validators.required, CheckValue(sudokuCell.correctNumber)]],\r\n        isInitial: []\r\n      }); \r\n    });\r\n    return this.formBuilder.array(cellArray);\r\n  }\r\n\r\n}\r\n","<p>sudoku works!</p>\r\n\r\n<form class=\"grid\" \r\n      [formGroup]=\"sudokuForm\">\r\n    <ng-container formArrayName=\"sections\">\r\n        <div class=\"section\" \r\n             [formGroupName]=\"i\" \r\n             *ngFor=\"let section of sections.controls; let i=index\">\r\n             <ng-container  formArrayName=\"section\">\r\n                <div class=\"cell\" \r\n                     *ngFor=\"let sudokuCell of section.get('section')!.value; let j=index\" \r\n                     [formGroupName]=\"j\">\r\n                    <input class=\"inputCell\" formControlName=\"cell\" >\r\n                </div>\r\n            </ng-container>            \r\n        </div>\r\n    </ng-container>\r\n</form>\r\n\r\n\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}